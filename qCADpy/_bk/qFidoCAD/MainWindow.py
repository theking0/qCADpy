# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(976, 844)
        MainWindow.setWindowTitle("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/res/logo.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("QMenuBar {\n"
" background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,stop:0 lightgray, stop:1 darkgray);\n"
"    spacing: 5px; /* spacing between menu bar items */\n"
"border-bottom:1px solid black;\n"
"}\n"
"\n"
"QMenuBar::item {\n"
"    padding: 1px 4px;\n"
"    background: transparent;\n"
"    border-radius: 2px;\n"
"}\n"
"\n"
"QMenuBar::item:selected { /* when selected using mouse or keyboard */\n"
"    background-color: rgb(162, 162, 162);\n"
"}\n"
"\n"
"QMenuBar::item:pressed {\n"
"    background-color: rgb(241, 241, 241);\n"
"}\n"
"\n"
"QMenu {\n"
"    background-color: #ABABAB; /* sets background of the menu */\n"
"    border: 1px solid black;\n"
"}\n"
"\n"
"QMenu::item {\n"
"    /* sets background of menu item. set this to something non-transparent\n"
"        if you want menu color and menu item color to be different */\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QMenu::item:selected { /* when user selects item using mouse or keyboard */\n"
"  /*  background-color: #654321;*/\n"
"    background-color: qlineargradient(spread:reflect, x1:0.523, y1:0, x2:0.522, y2:0.99322, stop:0 rgba(201, 255, 255, 239), stop:0.508772 rgba(197, 225, 255, 207), stop:0.997301 rgba(176, 255, 255, 236));\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QToolBar {\n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,\n"
"                                      stop:0 lightgray, stop:1 darkgray);\n"
"    spacing: 3px; /* spacing between items in the tool bar */\n"
"}\n"
"\n"
"QSplitter::handle {\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QSplitter::handle:horizontal {\n"
"    width:2px;\n"
"    \n"
"}\n"
"\n"
"QSplitter::handle:vertical {\n"
"    height:2px;\n"
"background-color: qlineargradient(spread:pad, x1:0.522, y1:1, x2:0.506, y2:0, stop:0 rgba(0, 0, 0, 236), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QSplitter::handle:pressed {\n"
"    background-color: black;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolBox::tab {\n"
"    background-color: qlineargradient(spread:reflect, x1:0.495, y1:0.505682, x2:0.494, y2:1, stop:0 rgba(168, 168, 168, 231), stop:1 rgba(199, 199, 199, 207));\n"
"border-bottom:1px solid black;\n"
"}\n"
"\n"
"QToolBox::tab:selected {\n"
"    \n"
"    background-color: qlineargradient(spread:reflect, x1:0.523, y1:0, x2:0.522, y2:0.99322, stop:0 rgba(201, 255, 255, 239), stop:0.508772 rgba(197, 225, 255, 207), stop:0.997301 rgba(176, 255, 255, 236));\n"
"}\n"
"\n"
"QStatusBar {\n"
"border-top:1px solid blak;\n"
"    background-color: qlineargradient(spread:reflect, x1:0.495, y1:0.505682, x2:0.494, y2:1, stop:0 rgba(168, 168, 168, 231), stop:1 rgba(199, 199, 199, 207));\n"
"}\n"
"\n"
"QStatusBar::item {\n"
"\n"
"}\n"
"\n"
"QTabWidget::pane { /* The tab widget frame */\n"
"    border-top: 2px solid #C2C7CB;\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    left: 0px; /* move to the right by 5px */\n"
"}\n"
"\n"
"/* Style the tab using the tab sub-control. Note that\n"
"    it reads QTabBar _not_ QTabWidget */\n"
"QTabBar::tab {\n"
"    background-color: qlineargradient(spread:reflect, x1:0.495, y1:0.505682, x2:0.494, y2:1, stop:0 rgba(168, 168, 168, 231), stop:1 rgba(199, 199, 199, 207));\n"
"    border: 1px solid #C4C4C3;\n"
"\n"
"    border-bottom-left-radius: 6px;\n"
"    border-bottom-right-radius: 6px;\n"
"    min-width: 20ex;\n"
"    padding:5px;\n"
"    margin-bottom:0px;\n"
"}\n"
"\n"
"QTabBar::tab:selected, QTabBar::tab:hover {\n"
"    background-color: qlineargradient(spread:reflect, x1:0.523, y1:0, x2:0.522, y2:0.99322, stop:0 rgba(201, 255, 255, 239), stop:0.508772 rgba(197, 225, 255, 207), stop:0.997301 rgba(176, 255, 255, 236));\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    border-color: #9B9B9B;\n"
"    border-bottom-color: #C2C7CB; /* same as pane color */\n"
"}\n"
"\n"
"QTabBar::tab:!selected {\n"
"    margin-bottom:8px; /* make non-selected tabs look smaller */\n"
"}\n"
"\n"
"")
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.splitter_2 = QtWidgets.QSplitter(self.centralWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_2.sizePolicy().hasHeightForWidth())
        self.splitter_2.setSizePolicy(sizePolicy)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.schematicsViewer = SchView(self.splitter_2)
        self.schematicsViewer.setMinimumSize(QtCore.QSize(400, 400))
        self.schematicsViewer.setObjectName("schematicsViewer")
        self.splitter = QtWidgets.QSplitter(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setMinimumSize(QtCore.QSize(200, 0))
        self.splitter.setMaximumSize(QtCore.QSize(400, 16777215))
        self.splitter.setBaseSize(QtCore.QSize(200, 0))
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setChildrenCollapsible(False)
        self.splitter.setObjectName("splitter")
        self.toolBox = QtWidgets.QToolBox(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBox.sizePolicy().hasHeightForWidth())
        self.toolBox.setSizePolicy(sizePolicy)
        self.toolBox.setMinimumSize(QtCore.QSize(200, 0))
        self.toolBox.setMaximumSize(QtCore.QSize(400, 16777215))
        font = QtGui.QFont()
        font.setBold(True)
        self.toolBox.setFont(font)
        self.toolBox.setObjectName("toolBox")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 363, 522))
        self.page.setObjectName("page")
        self.toolBox.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 363, 522))
        self.page_2.setObjectName("page_2")
        self.toolBox.addItem(self.page_2, "")
        self.tabWidget = QtWidgets.QTabWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMinimumSize(QtCore.QSize(200, 0))
        self.tabWidget.setMaximumSize(QtCore.QSize(400, 16777215))
        font = QtGui.QFont()
        font.setBold(True)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setMovable(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.tab.setObjectName("tab")
        self.tabWidget.addTab(self.tab, "")
        self.tab2 = QtWidgets.QWidget()
        self.tab2.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.tab2.setObjectName("tab2")
        self.tabWidget.addTab(self.tab2, "")
        self.verticalLayout.addWidget(self.splitter_2)
        MainWindow.setCentralWidget(self.centralWidget)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 976, 22))
        self.menuBar.setMinimumSize(QtCore.QSize(0, 22))
        self.menuBar.setObjectName("menuBar")
        self.menu_File = QtWidgets.QMenu(self.menuBar)
        self.menu_File.setObjectName("menu_File")
        self.menu_Edit = QtWidgets.QMenu(self.menuBar)
        self.menu_Edit.setEnabled(True)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menu_Tools = QtWidgets.QMenu(self.menuBar)
        self.menu_Tools.setObjectName("menu_Tools")
        self.menu_Help = QtWidgets.QMenu(self.menuBar)
        self.menu_Help.setObjectName("menu_Help")
        self.menuView = QtWidgets.QMenu(self.menuBar)
        self.menuView.setObjectName("menuView")
        MainWindow.setMenuBar(self.menuBar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.toolBar_2 = QtWidgets.QToolBar(MainWindow)
        self.toolBar_2.setObjectName("toolBar_2")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.actionZoomIn = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/res/zoomIn.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomIn.setIcon(icon1)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomOut = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/res/zoomOut.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomOut.setIcon(icon2)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionRefreshArea = QtWidgets.QAction(MainWindow)
        self.actionRefreshArea.setObjectName("actionRefreshArea")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/res/document_open.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon3)
        self.actionOpen.setObjectName("actionOpen")
        self.actionNew = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/res/document_new.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon4)
        self.actionNew.setObjectName("actionNew")
        self.actionRecent = QtWidgets.QAction(MainWindow)
        self.actionRecent.setObjectName("actionRecent")
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/res/save (2).ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon5)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_as = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/res/filesaveas.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave_as.setIcon(icon6)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionPrint = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/res/printer.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrint.setIcon(icon7)
        self.actionPrint.setObjectName("actionPrint")
        self.actionSave_image = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/res/photo-editor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave_image.setIcon(icon8)
        self.actionSave_image.setObjectName("actionSave_image")
        self.actionClose = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/res/shutdown.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClose.setIcon(icon9)
        self.actionClose.setObjectName("actionClose")
        self.actionCut = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/res/cut.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon10)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/res/copy.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon11)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setEnabled(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/res/gnome_edit_paste.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon12)
        self.actionPaste.setObjectName("actionPaste")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/res/delete.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete.setIcon(icon13)
        self.actionDelete.setObjectName("actionDelete")
        self.actionSelect_All = QtWidgets.QAction(MainWindow)
        self.actionSelect_All.setObjectName("actionSelect_All")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/res/settings1.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreferences.setIcon(icon14)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName("actionAbout")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setEnabled(True)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/res/undo.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon15)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRendo = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/res/redo.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRendo.setIcon(icon16)
        self.actionRendo.setObjectName("actionRendo")
        self.actionToolBar = QtWidgets.QAction(MainWindow)
        self.actionToolBar.setCheckable(True)
        self.actionToolBar.setChecked(True)
        self.actionToolBar.setObjectName("actionToolBar")
        self.actionLateral_Panel = QtWidgets.QAction(MainWindow)
        self.actionLateral_Panel.setCheckable(True)
        self.actionLateral_Panel.setChecked(True)
        self.actionLateral_Panel.setObjectName("actionLateral_Panel")
        self.actionRotate_ccw = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/res/rotate_ccw.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRotate_ccw.setIcon(icon17)
        self.actionRotate_ccw.setObjectName("actionRotate_ccw")
        self.actionRotate_cw = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/res/rotate_cw.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRotate_cw.setIcon(icon18)
        self.actionRotate_cw.setObjectName("actionRotate_cw")
        self.actionMirror = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/res/Mirror.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMirror.setIcon(icon19)
        self.actionMirror.setObjectName("actionMirror")
        self.actionroperties = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/res/show-property.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionroperties.setIcon(icon20)
        self.actionroperties.setObjectName("actionroperties")
        self.actionZoom_Area = QtWidgets.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icons/res/zoom-to-extents.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoom_Area.setIcon(icon21)
        self.actionZoom_Area.setObjectName("actionZoom_Area")
        self.actionAdjust_View = QtWidgets.QAction(MainWindow)
        self.actionAdjust_View.setObjectName("actionAdjust_View")
        self.actionScale = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icons/res/scale.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionScale.setIcon(icon22)
        self.actionScale.setObjectName("actionScale")
        self.actionSelect = QtWidgets.QAction(MainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icons/res/arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSelect.setIcon(icon23)
        self.actionSelect.setObjectName("actionSelect")
        self.actionLine = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icons/res/line.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLine.setIcon(icon24)
        self.actionLine.setObjectName("actionLine")
        self.actionRectangle = QtWidgets.QAction(MainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icons/res/rectangle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRectangle.setIcon(icon25)
        self.actionRectangle.setObjectName("actionRectangle")
        self.actionEllipse = QtWidgets.QAction(MainWindow)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icons/res/ellipse.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEllipse.setIcon(icon26)
        self.actionEllipse.setObjectName("actionEllipse")
        self.actionPolygon = QtWidgets.QAction(MainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icons/res/polygon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPolygon.setIcon(icon27)
        self.actionPolygon.setObjectName("actionPolygon")
        self.actionBezier = QtWidgets.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icons/res/bezier.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBezier.setIcon(icon28)
        self.actionBezier.setObjectName("actionBezier")
        self.actionConnection = QtWidgets.QAction(MainWindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icons/res/connection.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionConnection.setIcon(icon29)
        self.actionConnection.setObjectName("actionConnection")
        self.actionText = QtWidgets.QAction(MainWindow)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icons/res/text.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionText.setIcon(icon30)
        self.actionText.setObjectName("actionText")
        self.menu_File.addAction(self.actionNew)
        self.menu_File.addAction(self.actionOpen)
        self.menu_File.addAction(self.actionRecent)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.actionSave)
        self.menu_File.addAction(self.actionSave_as)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.actionPrint)
        self.menu_File.addAction(self.actionSave_image)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.actionClose)
        self.menu_Edit.addAction(self.actionUndo)
        self.menu_Edit.addAction(self.actionRendo)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.actionCut)
        self.menu_Edit.addAction(self.actionCopy)
        self.menu_Edit.addAction(self.actionPaste)
        self.menu_Edit.addAction(self.actionDelete)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.actionSelect_All)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.actionRotate_ccw)
        self.menu_Edit.addAction(self.actionRotate_cw)
        self.menu_Edit.addAction(self.actionMirror)
        self.menu_Edit.addAction(self.actionScale)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.actionroperties)
        self.menu_Tools.addAction(self.actionPreferences)
        self.menu_Help.addAction(self.actionAbout)
        self.menuView.addAction(self.actionZoom_Area)
        self.menuView.addAction(self.actionAdjust_View)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionToolBar)
        self.menuView.addAction(self.actionLateral_Panel)
        self.menuBar.addAction(self.menu_File.menuAction())
        self.menuBar.addAction(self.menu_Edit.menuAction())
        self.menuBar.addAction(self.menuView.menuAction())
        self.menuBar.addAction(self.menu_Tools.menuAction())
        self.menuBar.addAction(self.menu_Help.menuAction())
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionNew)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionSave_as)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionUndo)
        self.toolBar.addAction(self.actionRendo)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionZoom_Area)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionRotate_ccw)
        self.toolBar.addAction(self.actionRotate_cw)
        self.toolBar.addAction(self.actionMirror)
        self.toolBar.addAction(self.actionScale)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionroperties)
        self.toolBar_2.addAction(self.actionSelect)
        self.toolBar_2.addAction(self.actionLine)
        self.toolBar_2.addAction(self.actionRectangle)
        self.toolBar_2.addAction(self.actionEllipse)
        self.toolBar_2.addAction(self.actionPolygon)
        self.toolBar_2.addAction(self.actionBezier)
        self.toolBar_2.addAction(self.actionConnection)
        self.toolBar_2.addAction(self.actionText)

        self.retranslateUi(MainWindow)
        self.toolBox.setCurrentIndex(0)
        self.toolBox.layout().setSpacing(1)
        self.tabWidget.setCurrentIndex(0)
        self.actionClose.triggered.connect(MainWindow.close) # type: ignore
        self.actionToolBar.toggled['bool'].connect(self.toolBar.setVisible) # type: ignore
        self.actionLateral_Panel.toggled['bool'].connect(self.splitter_2.setVisible) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("MainWindow", "Symbols"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("MainWindow", "Objects"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Colors"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab2), _translate("MainWindow", "Decorators"))
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.menu_Edit.setTitle(_translate("MainWindow", "&Edit"))
        self.menu_Tools.setTitle(_translate("MainWindow", "&Settings"))
        self.menu_Help.setTitle(_translate("MainWindow", "&Help"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.toolBar_2.setWindowTitle(_translate("MainWindow", "toolBar_2"))
        self.actionZoomIn.setText(_translate("MainWindow", "ZoomIn"))
        self.actionZoomIn.setToolTip(_translate("MainWindow", "Zoom In"))
        self.actionZoomOut.setText(_translate("MainWindow", "ZoomOut"))
        self.actionZoomOut.setToolTip(_translate("MainWindow", "Zoom Out"))
        self.actionRefreshArea.setText(_translate("MainWindow", "RefreshArea"))
        self.actionRefreshArea.setToolTip(_translate("MainWindow", "RefreshArea"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionRecent.setText(_translate("MainWindow", "Recent"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave_as.setText(_translate("MainWindow", "Save As..."))
        self.actionPrint.setText(_translate("MainWindow", "Print"))
        self.actionSave_image.setText(_translate("MainWindow", "Save image"))
        self.actionClose.setText(_translate("MainWindow", "Quit"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionSelect_All.setText(_translate("MainWindow", "Select All"))
        self.actionPreferences.setText(_translate("MainWindow", "Preferences..."))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionRendo.setText(_translate("MainWindow", "Rendo"))
        self.actionToolBar.setText(_translate("MainWindow", "Tool Bar"))
        self.actionLateral_Panel.setText(_translate("MainWindow", "Lateral Panel"))
        self.actionRotate_ccw.setText(_translate("MainWindow", "Rotate ccw"))
        self.actionRotate_cw.setText(_translate("MainWindow", "Rotate cw"))
        self.actionMirror.setText(_translate("MainWindow", "Mirror"))
        self.actionroperties.setText(_translate("MainWindow", "Properties"))
        self.actionZoom_Area.setText(_translate("MainWindow", "Zoom Area"))
        self.actionAdjust_View.setText(_translate("MainWindow", "Adjust View"))
        self.actionScale.setText(_translate("MainWindow", "Scale"))
        self.actionSelect.setText(_translate("MainWindow", "Select"))
        self.actionLine.setText(_translate("MainWindow", "Line"))
        self.actionRectangle.setText(_translate("MainWindow", "Rectangle"))
        self.actionEllipse.setText(_translate("MainWindow", "Ellipse"))
        self.actionPolygon.setText(_translate("MainWindow", "Polygon"))
        self.actionBezier.setText(_translate("MainWindow", "Bezier"))
        self.actionConnection.setText(_translate("MainWindow", "Connection"))
        self.actionText.setText(_translate("MainWindow", "Text"))
from SchView import SchView
import res_rc
